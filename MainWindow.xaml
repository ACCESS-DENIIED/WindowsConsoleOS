<Window x:Class="WindowSelector.MainWindow"
        Activated="Window_Activated"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WindowSelector"
        Title="MainWindow" Height="350" Width="600"
        AllowsTransparency="True"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        WindowStyle="None"
        Background="Transparent"
        WindowState="Maximized">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <SolidColorBrush x:Key="PrimaryColor" Color="#FF6200EE"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#FF03DAC6"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#FF121212"/>
        <SolidColorBrush x:Key="OnBackgroundColor" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="SurfaceColor" Color="#FF333333"/>
        <SolidColorBrush x:Key="OnSurfaceColor" Color="#DEFFFFFF"/>
        <local:LazyImageLoader x:Key="LazyImageLoader"/>
        <Storyboard x:Key="ZoomIn">
            <DoubleAnimation From="0" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
            <DoubleAnimation From="0" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
            <DoubleAnimation From="0" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="ZoomOut">
            <DoubleAnimation To="0" Duration="0:0:0.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
            <DoubleAnimation To="0" Duration="0:0:0.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
            <DoubleAnimation To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Style x:Key="ModernToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="#FF0063B1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="5" BlurRadius="10" Opacity="0.5"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF007ACC"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF007ACC" BlurRadius="15" ShadowDepth="0" Opacity="0.7"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Additional triggers for pressed state etc. here -->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <ui:SimpleStackPanel Margin="12" Spacing="24">
        <Grid>
            <Grid.ColumnDefinitions>
                <!-- Allocate 1/3 of the space for the ListBox and item names -->
                <ColumnDefinition Width="1*"/>
                <!-- Allocate 2/3 of the space for the preview image -->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListBox VirtualizingStackPanel.IsVirtualizing="True"
         VirtualizingStackPanel.VirtualizationMode="Recycling"
         Background="Transparent" 
         BorderThickness="0" 
         x:Name="WindowListBox" 
         HorizontalAlignment="Stretch" 
         VerticalAlignment="Stretch" 
         Margin="10" 
         SelectionChanged="WindowListBox_SelectionChanged" 
         Grid.Column="0">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource OnBackgroundColor}"/>
                        <Setter Property="Padding" Value="8"/>
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Width="40" Height="40" Source="{Binding Icon}" Grid.Column="0"/>
                            <TextBlock Text="{Binding Name}" FontSize="72" Foreground="White" Margin="10,0" VerticalAlignment="Center" Grid.Column="1"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Enhanced Preview Image with Rounded Edges and Shadow -->
            <Border Background="Transparent" Grid.Column="1" Margin="10" CornerRadius="1" VerticalAlignment="Top" HorizontalAlignment="Right" Padding="5">
                <Border.Effect>
                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="5" BlurRadius="10" Opacity="0.5"/>
                </Border.Effect>
                <Image x:Name="PreviewImage" Source="{Binding SelectedItem.WindowHandle, ElementName=WindowListBox, Converter={StaticResource LazyImageLoader}}" Stretch="Uniform"/>
            </Border>
            <Image Source="Legend.png" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="600" Margin="10" Grid.ColumnSpan="2" />
        </Grid>

        <!-- Popup for Audio Devices -->
        <Popup x:Name="AudioDevicesPopup" Placement="Center" AllowsTransparency="True" IsOpen="False">
            <Border Background="#2D2D30" Margin="5" CornerRadius="5">
                <ListBox x:Name="AudioDeviceList" DisplayMemberPath="FullName" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="DodgerBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <!-- Modernize the ListBox appearance with a custom style or by adjusting properties here -->
                </ListBox>
            </Border>
        </Popup>
    </ui:SimpleStackPanel>
</Window>
